mysql> DELIMITER //
mysql> CREATE PROCEDURE calculate_av_salary()
    -> BEGIN
    ->     DECLARE cur_salary INT;
    ->     DECLARE total_salary INTEGER DEFAULT 0;
    ->     DECLARE num_rows INTEGER DEFAULT 0;
    ->     DECLARE avg_salary INTEGER DEFAULT 0;
    ->     DECLARE done BOOLEAN DEFAULT FALSE;
    ->     DECLARE salary_cursor CURSOR FOR SELECT salary FROM employees;
    ->     DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    ->     OPEN salary_cursor;
    ->     fetch_loop: LOOP
    ->         FETCH salary_cursor INTO cur_salary;
    ->         IF done THEN
    ->             LEAVE fetch_loop;
    ->         END IF;
    ->         IF cur_salary IS NOT NULL THEN
    ->             SET total_salary = total_salary + cur_salary;
    ->             SET num_rows = num_rows + 1;
    ->         END IF;
    ->     END LOOP fetch_loop;
    ->     CLOSE salary_cursor;
    ->     IF num_rows > 0 THEN
    ->         SET avg_salary = total_salary / num_rows;
    ->     END IF;
    ->     SELECT avg_salary;
    -> END //
Query OK, 0 rows affected (0.25 sec)

mysql> DELIMITER ;
mysql> select * from employees;
+-------------+------------+-----------+----------+
| employee_id | first_name | last_name | salary   |
+-------------+------------+-----------+----------+
|           1 | john       | Doe       | 50000.00 |
|           2 | Jane       | Smith     | 60000.00 |
|           3 | Micheal    | Johnson   | 55000.00 |
|           4 | Harry      | Kane      | 55000.00 |
|           5 | Minnu      | Joseph    | 65000.00 |
+-------------+------------+-----------+----------+
5 rows in set (0.03 sec)

mysql> call calculate_av_salary();
+------------+
| avg_salary |
+------------+
|      57000 |
+------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.00 sec)

